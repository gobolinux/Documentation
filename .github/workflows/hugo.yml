# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DREAMHOST_DEPLOY_KEY }}

      - name: Add Dreamhost to known hosts
        run: ssh-keyscan ${{ secrets.DREAMHOST_HOST }} >> ~/.ssh/known_hosts

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ./public

      - name: Display structure of downloaded files
        run: ls -R

      - name: Sync files and uncompress on Dreamhost
        env:
          DREAMHOST_USER: ${{ secrets.DREAMHOST_USER }}
          DREAMHOST_HOST: ${{ secrets.DREAMHOST_HOST }}
          DREAMHOST_PATH: ${{ secrets.DREAMHOST_PATH }}
        run: |
          rsync -avz --delete public/ $DREAMHOST_USER@$DREAMHOST_HOST:$DREAMHOST_PATH
          ssh $DREAMHOST_USER@$DREAMHOST_HOST "tar -xvf $DREAMHOST_PATH/github-pages/artifact.tar -C $DREAMHOST_PATH"
